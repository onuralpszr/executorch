name: nightly

on:
  schedule:
    - cron: 0 2 * * *
  push:
    tags:
      - ciflow/nightly/*
  pull_request:
    paths:
      .github/workflows/nightly.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}--${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

jobs:
  update-pytorch-commit-hash:
    runs-on: ubuntu-latest
    environment: ${{ (github.event_name == 'schedule') && 'update-commit-hash' || '' }}
    steps:
      - name: update-pytorch-commit-hash
        uses: pytorch/test-infra/.github/actions/update-commit-hash@main
        if: ${{ github.event_name == 'schedule' }}
        with:
          repo-name: pytorch
          branch: main
          pin-folder: .ci/docker/ci_commit_pins
          test-infra-ref: main
          updatebot-token: ${{ secrets.UPDATEBOT_TOKEN }}
          pytorchbot-token: ${{ secrets.GH_PYTORCHBOT_TOKEN }}

  link-check:
    needs: update-pytorch-commit-hash
    uses: ./.github/workflows/_link_check.yml
    with:
      ref: ${{ github.sha }}

  backend-test-linux:
    uses: pytorch/test-infra/.github/workflows/linux_job_v2.yml@main
    strategy:
      fail-fast: false
      matrix:
        flow: [xnnpack, xnnpack_static_int8_per_channel]
        suite: [models, operators]
        runner: [linux.2xlarge]
        docker-image: [executorch-ubuntu-22.04-clang12]
    with:
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      runner: ${{ matrix.runner }}
      docker-image: ci-image:${{ matrix.docker-image }}
      submodules: recursive
      timeout: 90
      script: |
        set -eux
        # The generic Linux job chooses to use base env, not the one setup by the image
        CONDA_ENV=$(conda env list --json | jq -r ".envs | .[-1]")
        conda activate "${CONDA_ENV}"

        ./install_requirements.sh > /dev/null
        cmake --preset ${{ matrix.preset }}
        cmake --build cmake-out -j$(( $(nproc) - 1 ))
